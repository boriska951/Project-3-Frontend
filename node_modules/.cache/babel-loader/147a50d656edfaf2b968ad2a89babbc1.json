{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nexport const cartReducer = (state = {\n  cartItems: []\n}, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_TO_CART:\n      const item = action.payload;\n      const existItem = state.cartItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          cartItems: [...state.cartItems, item]\n        };\n      }\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cartItems: state.cartItems.filter(x => x.product !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/boris/sei-bromeliad/projects/project3/Ecommerce-Website/src/redux/reducers/cartReducers.js"],"names":["actionTypes","cartReducer","state","cartItems","action","type","ADD_TO_CART","item","payload","existItem","find","x","product","map","REMOVE_FROM_CART","filter"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAAT,EAA0BC,MAA1B,KAAoC;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAW,CAACM,WAAjB;AACI,YAAMC,IAAI,GAAGH,MAAM,CAACI,OAApB;AAEA,YAAMC,SAAS,GAAGP,KAAK,CAACC,SAAN,CAAgBO,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA/C,CAAlB;;AAEA,UAAGH,SAAH,EAAc;AACV,eAAM,EACF,GAAGP,KADD;AAEFC,UAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBU,GAAhB,CAAqBF,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAApE;AAFT,SAAN;AAIH,OALD,MAKO;AACH,eAAO,EACH,GAAGT,KADA;AAEHC,UAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,EAAqBI,IAArB;AAFR,SAAP;AAIH;;AAEL,SAAKP,WAAW,CAACc,gBAAjB;AACI,aAAM,EACF,GAAGZ,KADD;AAEFC,QAAAA,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBY,MAAhB,CAAwBJ,CAAD,IAAOA,CAAC,CAACC,OAAF,KAAcR,MAAM,CAACI,OAAnD;AAFT,OAAN;;AAIJ;AACI,aAAON,KAAP;AAxBR;AA0BH,CA3BM","sourcesContent":["import * as actionTypes from '../constants/cartConstants'\n\nexport const cartReducer = (state = {cartItems: []}, action) =>{\n    switch(action.type){\n        case actionTypes.ADD_TO_CART:\n            const item = action.payload\n\n            const existItem = state.cartItems.find((x) => x.product === item.product)\n\n            if(existItem) {\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n\n        case actionTypes.REMOVE_FROM_CART:\n            return{\n                ...state,\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}