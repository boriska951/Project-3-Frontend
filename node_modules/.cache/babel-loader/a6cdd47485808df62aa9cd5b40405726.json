{"ast":null,"code":"import * as actionTypes from '../constants/productConstant';\nimport axios from 'axios';\nexport const getProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('http://localhost:3003');\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductsDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`http://localhost:3003/:${id}`);\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const removeProductDetails = () => dispatch => {\n  dispatch({\n    type: actionTypes.GET_PRODUCT_DETAILS_RESET\n  });\n};","map":{"version":3,"sources":["/Users/boris/sei-bromeliad/projects/project3/Ecommerce-Website/ecommerce-website/src/redux/actions/productActions.js"],"names":["actionTypes","axios","getProducts","dispatch","type","GET_PRODUCTS_REQUEST","data","get","GET_PRODUCTS_SUCCESS","payload","error","GET_PRODUCTS_FAIL","response","message","getProductsDetails","id","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","removeProductDetails","GET_PRODUCT_DETAILS_RESET"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,8BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,WAAW,CAACK;AAAnB,KAAD,CAAR;AAEA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAU,uBAAV,CAArB;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACQ,oBADb;AAELC,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOI,KAAP,EAAa;AACXP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACW,iBADb;AAELF,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAApE,GAA8EH,KAAK,CAACG;AAFxF,KAAD,CAAR;AAIH;AACJ,CAjBM;AAmBP,OAAO,MAAMC,kBAAkB,GAAIC,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAC1D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,WAAW,CAACgB;AAAnB,KAAD,CAAR;AAEA,UAAM;AAACV,MAAAA;AAAD,QAAS,MAAML,KAAK,CAACM,GAAN,CAAW,0BAAyBQ,EAAG,EAAvC,CAArB;AAEAZ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACiB,2BADb;AAELR,MAAAA,OAAO,EAAEH;AAFJ,KAAD,CAAR;AAKH,GAVD,CAUE,OAAOI,KAAP,EAAa;AACXP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEJ,WAAW,CAACW,iBADb;AAELF,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAApE,GAA8EH,KAAK,CAACG;AAFxF,KAAD,CAAR;AAIH;AACJ,CAjBM;AAmBP,OAAO,MAAMK,oBAAoB,GAAG,MAAOf,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACmB;AADb,GAAD,CAAR;AAGH,CAJM","sourcesContent":["import * as actionTypes from '../constants/productConstant'\nimport axios from 'axios'\n\nexport const getProducts = () => async (dispatch) => {\n    try {\n        dispatch({type: actionTypes.GET_PRODUCTS_REQUEST})\n\n        const {data} = await axios.get('http://localhost:3003')\n\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error){\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const getProductsDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({type: actionTypes.GET_PRODUCT_DETAILS_REQUEST})\n\n        const {data} = await axios.get(`http://localhost:3003/:${id}`)\n\n        dispatch({\n            type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error){\n        dispatch({\n            type: actionTypes.GET_PRODUCTS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const removeProductDetails = () => (dispatch) => {\n    dispatch({\n        type: actionTypes.GET_PRODUCT_DETAILS_RESET\n    })\n}"]},"metadata":{},"sourceType":"module"}